@model Business.Job



<style>
    .myclass {
        display:none;
    }
</style>

@using (Html.BeginForm("SaveJob", "Jobs", FormMethod.Post, new { id = "frm",enctype = "multipart/form-data"}))
{



    <span id="" class="col-md-12 popup_box_title clearfix">

        @if (Model.JobId == 0)
        {
            <span>Post your job</span>
            <p class="popup_box_title_p">Post your job and get the best freelancers come to you</p>
        }
        else
        {
            <span>Edit your job</span>
            <p class="popup_box_title_p">Post a job and start letting the community know <br>what you need done</p>
        }

        <a href="#" id="postjob_view_Close" class="popup_close_bg" title="Close"></a>
    </span>

    <div class="col-md-12 pop_container_bg">
        <div class="form-group clearfix">
            <label for="Give_your" class="input_label_style title_len_out_lb" id="labeltitle">Give your project a title<span class="title_len_sp" id="titlecharcount"></span></label>
            @Html.TextAreaFor(x => x.JobTitle, new { @id = "Give_your", @placeholder = "My great job", @class = "form-control form_input", @maxlength = "200" })
            @Html.ValidationMessageFor(x => x.JobTitle, "", new { @class = "error_span" })
            @Html.HiddenFor(x => x.JobStatus)
        </div>

        <div class="form-group clearfix">
            <label for="" class="input_label_style title_len_out_lb">Tell us what you are looking for<span class="title_len_sp" id="desccharcount"></span></label>
            @Html.TextAreaFor(x => x.JobDescription, new { @id = "Give_your_Desc", @placeholder = "I am looking for someone who will…", @class = "form-control form_input textarea_height_100", @maxlength = "2000" })
            @Html.ValidationMessageFor(x => x.JobDescription, "", new { @class = "error_span" })
        </div>
        <div class="form-group clearfix">
            <label for="" class="input_label_style">Project documents</label>

            <div class="demo_container dropzone_bg">
                <div class="dropzone" id="my-dropzone"></div>

            </div>

        </div> <!-- // form-group-->

        <div class="form-group clearfix">
            <label for="" class="input_label_style">What category does your job best fit in?</label>
            @Html.DropDownListFor(x => x.JobCategoryId, new SelectList((IEnumerable<Business.JobCategory>)TempData["Category"], "JobCategoryId", "Category"), "--Select--", new { @class = "form-control form_input", @id = "JobCategoryId" })
            @Html.ValidationMessageFor(x => x.JobCategoryId, "", new { @class = "error_span" })
        </div>

        <div class="form-group clearfix">
            <label for="" class="input_label_style">Add tags to help freelancers find your job</label>
            @Html.DropDownList("ddlTags", new SelectList((IEnumerable<Business.TrendingTags>)TempData["Tags"], "TrendingTagsId", "Description"), new { @placeholder = "Select Tags...", @multiple = "multiple", @tabindex = "4", @class = "chosen-select", @id = "TrendingTagsId", @title = "Select tags" })


            <span for="" id="errormsg"><span class="error_span field-validation-error">Please add a few tags.They help people find your job!</span></span>
        </div>

        <div class="form-group clearfix">
            <label for="" class="input_label_style">Do you need any special skills?</label>
            @Html.DropDownList("ddlSkills", new SelectList((IEnumerable<Business.Skills>)TempData["Skills"], "SkillsId", "Description"), new { @placeholder = "Select Skills...", @multiple = "multiple", @tabindex = "4", @class = "chosen-select", @id = "SkillsId", @title = "Select special skills" })

        </div>

        <div class="form-group clearfix">
            <label for="" class="input_label_style">What is your budget? (AXPR)</label>
            <div class="budget_axp_form_label">
                @*@Html.TextBoxFor(x => x.BudgetASP, new { @id = "budgetASP", @class = "form-control form_input", @maxlength = "15" })*@
                @Html.TextBoxFor(x => x.BudgetASPString, new { @id = "BudgetASPString", @class = "form-control form_input", @maxlength = "15" })
                <span>
                    (  $@Html.LabelFor(x => x.BudgetInDollar, (Model.BudgetInDollar).ToString("#,##0.00"), new { @id = "budgetdollar", @readonly = "readonly" }) )
                </span>
            </div>
            @Html.ValidationMessageFor(x => x.BudgetASPString, "", new { @class = "error_span" })
            <span class="forms_small_info">@Html.LabelFor(x => x.Commission, (Model.Commission).ToString("N2"), new { @id = "IdCommn" }) AXPR is taken from this and burnt (3% burn)</span>
        </div>


        <div class="form-group clearfix">
            <span class="add_job_cost">Your job will cost: @Html.LabelFor(x => x.TotalBudget, (Model.TotalBudget).ToString("N2"), new { @id = "IdtotalBudget" }) AXPR</span>
        </div>

        <div class="form-group clearfix">
            <label for="" class="input_label_style">When do you need the job completed by? </label>
            <div class='date' id='sandbox-container'>
                @Html.TextBoxFor(x => x.JobCompletionDate, Model.JobCompletionDateDisplay, new { @id = "jobcompletionDate", @placeholder = "Enter date", @class = "form-control form_input ", autocomplete = "off" })
            </div>
            @Html.ValidationMessageFor(x => x.JobCompletionDate, "", new { @class = "error_span" })
        </div>
        <div class="form-group clearfix">
            <div class="g-recaptcha" data-sitekey="@System.Configuration.ConfigurationManager.AppSettings["reCaptchaPublicKey"]" data-callback="reCaptchaVerify"></div> 
            <span id="captcha_valid" class="error_span field-validation-error" data-valmsg-replace="true" style="display:none;"><span class="">Please complete reCAPTCHA</span></span>      
        </div>
        <div class="form-group clearfix">
            @if (Model.JobId == 0)
                {
                <input type="button" id="btnSaveJob" class="btn btn-default register_small_button secondary_color_bg" title="CREATE  JOB" value="CREATE  JOB" />
            }
            else
            {
                <input type="button" id="btnSaveJob" class="btn btn-default register_small_button secondary_color_bg" title="SAVE CHANGES" value="SAVE CHANGES" />
            }


            @Html.HiddenFor(x => x.JobId)
            @Html.HiddenFor(x => x.JobTrendingTagsMappingList)

        </div>

        @if (Model.JobId > 0)
                {
            <div class="form-group register_small_already_reg delete_job_link clearfix">
                <p><a href="#" id="deleteJob">DELETE THIS JOB</a></p>
            </div>
        }

    </div>



}

<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Content/js/bootstrap.min.js")"></script>
<script src="@Url.Content("~/Content/js/wow.min.js")"></script>

<script src="@Url.Content("~/Content/js/bootstrap-datepicker.min.js")"></script>
<script src="@Url.Content("~/Content/js/chosen.jquery.js")" type="text/javascript" charset="utf-8"></script>
<script src="@Url.Content("~/Content/js/init.js")" type="text/javascript" charset="utf-8"></script>
<script type="text/javascript" src="@Url.Content("~/Content/js/dropzone.js")"></script>
<script src="https://www.google.com/recaptcha/api.js"></script>

<script>
    wow = new WOW({}).init();
    var lis = 0, lastTag = '';
    $(document).on('click', 'a[href^="#"].smothscroll', function (event) {
        event.preventDefault();

        $('html, body').animate({
            scrollTop: $($.attr(this, 'href')).offset().top
        }, 700);
    });
</script>
<script>
    Dropzone.autoDiscover = false;
    reCaptchaVerify = function(val) {
        //console.log(val); 
        $('#captcha_valid').hide();
    }
    function CalculateBudgetinDollar() {

        var _BudgetASP = $("#BudgetASPString").val().toString().replace(/,/g, "");
        if($.isNumeric(_BudgetASP)) {
            if (_BudgetASP != "")
            {
                var amount=parseFloat(_BudgetASP).toFixed(2);
                var _budget=(+amount).toLocaleString();
                $("#BudgetASPString").val(_budget);
            }
            if (_BudgetASP == "") {

                //$("#BudgetASPString").val(0);
                event.preventDefault();
            }
            else {
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '@Url.Action("CalculateBudgetinDollarPostJob", "Jobs")',
                    data: { "budget": _BudgetASP },
                    success: function (data) {
                        //var _Budget = data.toFixed(2);


                        var _Budget = Number(parseFloat(data).toFixed(2)).toLocaleString('en', {
                            minimumFractionDigits: 2
                        });

                        var _Commission = (_BudgetASP * 3 / 100).toFixed(2);                       
                        _Commission=(+_Commission).toLocaleString();
                        var _TotalBudget = (parseFloat(_BudgetASP) + parseFloat(_Commission)).toFixed(2);
                        _TotalBudget=(+_TotalBudget).toLocaleString();

                        $("#budgetdollar").val(_Budget);
                        $("#budgetdollar").text(_Budget);
                        $("#IdCommn").val(_Commission);
                        $("#IdCommn").text(_Commission);
                        $("#IdtotalBudget").val(_TotalBudget);
                        $("#IdtotalBudget").text(_TotalBudget);
                    },
                    error: function (jqXHR, exception) {
                        console.log(jqXHR.status);
                        console.log(exception);
                    }
                });
            }
        }
    }

    $(document).ready(function () {


        var exchangerate=@Html.Raw(Json.Encode(Session["ExRate"]));
        localStorage.setItem("exchangerate",exchangerate);

        //$("#TrendingTagsId_chosen .search-field input").val("Select tags");
        //$("#SkillsId_chosen .search-field input").val("Select special skills");

        $("#confirm_message_pop_id #divmsg").text(" ")

        $("#btnclosecoinfirm").click(function(){
            closebox('confirm_message_pop_id');
            $("#confirm_message_pop_id #divmsg").text(" ");
        })

        var _bud= $("#BudgetASPString").val()
        if(_bud==" ")
        {
            var _amount=parseFloat( $("#BudgetASPString").val()).toFixed(2);
            var _budget=(+_amount).toLocaleString();
            $("#BudgetASPString").val(_budget);
        }

        $("#errormsg").hide();

        $('#postjob_view_Close').click(function () {

            closebox('postjob_view_pop_id')

            var FirstLogin=""
            if(sessionStorage.getItem("FirstLogin")!=null)
            {
                FirstLogin = sessionStorage.getItem("FirstLogin");
            }
            else
            {
                FirstLogin= @Html.Raw(Json.Encode(Session["FirstLogin"]));
            }
            var userType = @Html.Raw(Json.Encode(Session["UserType"]));
            if((FirstLogin=="Y") && (userType !=2))
            {
                $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '@Url.Action("SkillMapping", "Login")',
                    success: function (response) {
                        $("#skillmapping_pop_id").html(response)
                        openbox(1, 'skillmapping_pop_id');
                    },
                    error: function (jqXHR, exception) {

                        console.log(jqXHR.status);
                        console.log(exception);
                    }
                });
            }
        });


        $('#sandbox-container input').datepicker({
            startDate: "dateToday",
            format: 'd-M-yyyy',
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down"
            },
            todayHighlight:'TRUE',
            autoclose: true,
        }).on('changeDate', function(e){
            $('#frm').validate();
        });

        //$('.datepicker').datepicker();


        var _JobId = $("#JobId").val();
        if (_JobId > 0) {

            //=====================Tags Loading====================================
            LoadTags();
            function LoadTags(){
                var objTrendingTagsList = [];
                var objSelectedTagsList = [];
                objTrendingTagsList=@Html.Raw(Json.Encode(TempData["Tags"]));
                objSelectedTagsList = @Html.Raw(Json.Encode(TempData["SelectedTags"]));
                var _ddlTags = $("#TrendingTagsId")
                $("#TrendingTagsId").empty();
                var SelectedTaglist = $("#TrendingTagsId_chosen ul ")
                //_ddlTags.append('<option value="--Select--" >' + '--Select --' + '</option>');

                for (var i = 0; i < objTrendingTagsList.length; i++)
                {
                    _ddlTags.append('<option value=' + objTrendingTagsList[i].TrendingTagsId + ' >' +objTrendingTagsList[i].Description + '</option > ');
                }
                //used to apply select "div.chosen-drop" when edit mode
                $("#TrendingTagsId > option").each(function() {
                    var _optionValue = $(this).text().trim();
                    for(var j=0;j<objSelectedTagsList.length;j++)
                    {
                        var Tagindex=j+1;
                        if(_optionValue == objSelectedTagsList[j].Description)
                            $(this).attr('selected','selected');
                    }
                });
                $("#TrendingTagsId").trigger("chosen:updated");
            }

            //=====================Skills Loading====================================
            SkillsLoading();
            function SkillsLoading(){
                var objSkillsMappingList = [];
                var objSelectedSkillsList = [];

                objSkillsMappingList=@Html.Raw(Json.Encode(TempData["Skills"]));
                objSelectedSkillsList = @Html.Raw(Json.Encode(TempData["SelectedSkills"]));

                var _ddlSkills = $("#SkillsId")
                $("#SkillsId").empty();

                var Skilllist = $("#SkillsId_chosen ul ")
                //_ddlSkills.append('<option value="--Select--" >' + '--Select --' + '</option>');
                for (var k = 0; k < objSkillsMappingList.length; k++)
                {
                    _ddlSkills.append('<option value=' + objSkillsMappingList[k].SkillsId + ' >' +objSkillsMappingList[k].Description + '</option > ');

                }
                //used to apply select "div.chosen-drop" when edit mode
                $("#SkillsId > option").each(function() {
                    var _optionValue = $(this).text().trim();
                    for(var j=0;j<objSelectedSkillsList.length;j++)
                    {
                        var Tagindex=j+1;
                        if(_optionValue == objSelectedSkillsList[j].Description)
                            $(this).attr('selected','selected');
                    }
                });
                $("#SkillsId").trigger("chosen:updated");
            }
            //CalculateBudgetinDollar();
            validatebudget();
        }


        else
        {
            $("#jobcompletionDate").val("");
        }

        //$("#BudgetASPString").click(function (event) {

        //    //CalculateBudgetinDollar();
        //    validatebudget();
        //});


        $("#BudgetASPString").on('keypress', function (evt) {

               var _amount = $("#BudgetASPString").val().trim();
               //var charCode = (evt.which) ? evt.which : event.keyCode
               var number = _amount.split('.');
               //if(charCode == 46 && !(_amount.indexOf(".") > -1)) {	
               //    return true;
               //}
               //if (!$.isNumeric(_amount) && charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 46) {
               //    return false;
               //}
               //else if(number.length > 1 && number[1].length > 1)
               //{
               //    return false;
               //}
               //else {
               //    return true;
               //}
               var theEvent = evt || window.event;
               var key = theEvent.keyCode || theEvent.which;
               key = String.fromCharCode(key);
               var regex = /[0-9]|\./;
               if (!regex.test(key)) {                    
                    theEvent.preventDefault ? theEvent.preventDefault() : (theEvent.returnValue = false); 
               } else if(theEvent.keyCode == 46 && _amount.indexOf(".") > -1) {
                   theEvent.preventDefault ? theEvent.preventDefault() : (theEvent.returnValue = false); 
               } else if(number && number.length > 1 && number[1].length > 1) {
                   theEvent.preventDefault ? theEvent.preventDefault() : (theEvent.returnValue = false); 
               }
               else {
                  validatebudget();
               }
           });

           $('#BudgetASPString').on('keyup change', function (event) {
               //if(event.keyCode == 8) {
                   validatebudget();       
               //}   
           });  


        function validatebudget()
        {
            debugger;
            var bidamt=$("#BudgetASPString").val().toString().replace(/,/g, "").trim();
            if(bidamt=="")
            {
                $("[data-valmsg-for='BudgetASPString']").text("You need to provide a budget.");
                var _Budget = Number(parseFloat(0).toFixed(2)).toLocaleString('en', {
                    minimumFractionDigits: 2
                });
                $("#budgetdollar").val(_Budget);
                $("#budgetdollar").text(_Budget);
                $("#IdCommn").val(_Budget);
                $("#IdCommn").text(_Budget);
                $("#IdtotalBudget").val(_Budget);
                $("#IdtotalBudget").text(_Budget);
            }
            else if($.isNumeric(bidamt))
            {
                $("[data-valmsg-for='BudgetASPString']").text("");
                var exrate=localStorage.getItem("exchangerate");

                var rateindollar=exrate*bidamt;
                var _Budget = Number(parseFloat(rateindollar).toFixed(2)).toLocaleString('en', {
                    minimumFractionDigits: 2
                });
                $("#budgetdollar").val(_Budget);
                $("#budgetdollar").text(_Budget);

                var _BudgetASP = $("#BudgetASPString").val().toString().replace(/,/g, "");
                if (_BudgetASP != "")
                {
                    var amount=parseFloat(_BudgetASP).toLocaleString();
                    if(_BudgetASP.indexOf('.') > -1 && _BudgetASP[_BudgetASP.length - 1] == '.') {
                        amount += '.'
                    }
                    //var _budget=(+amount).toLocaleString(undefined, {minimumFractionDigits: 2});
                    $("#BudgetASPString").val(amount);
                }

                var _Commission = (_BudgetASP * 3 / 100).toFixed(2);
                // _Commission=(+_Commission).toLocaleString();
                var _TotalBudget = (parseFloat(_BudgetASP) + parseFloat(_Commission)).toFixed(2);
                _TotalBudget=(+_TotalBudget).toLocaleString();


                $("#IdCommn").val(_Commission);
                $("#IdCommn").text(_Commission);
                $("#IdtotalBudget").val(_TotalBudget);
                $("#IdtotalBudget").text(_TotalBudget);
            }
            else
            {
                $("[data-valmsg-for='BudgetASPString']").text("Please enter a valid amount.");
                var _Budget = Number(parseFloat(0).toFixed(2)).toLocaleString('en', {
                    minimumFractionDigits: 2
                });
                $("#budgetdollar").val(_Budget);
                $("#budgetdollar").text(_Budget);
                $("#IdCommn").val(_Budget);
                $("#IdCommn").text(_Budget);
                $("#IdtotalBudget").val(_Budget);
                $("#IdtotalBudget").text(_Budget);

            }
        }

        //function isNumber(evt, _amount) {
        //    debugger
        //    //var _amount=$("#BudgetASPString").val().trim();
        //    var charCode = (evt.which) ? evt.which : event.keyCode
        //    if (_amount.length == 0 && charCode == 48 ){

        //        return false;
        //    }
        //    if (
        //        (charCode != 45 || $(element).val().indexOf('-') != -1) &&      // “-” CHECK MINUS, AND ONLY ONE.
        //        (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
        //        (charCode < 48 || charCode > 57))
        //    {

        //        return false;
        //    }


        //        return true;


        //}

        //$("#BudgetASPString").change(function (event) {


        //             CalculateBudgetinDollar();
        //         });

        //$("#BudgetASPString").on('change', function(){
        //    //CalculateBudgetinDollar();
        //    validatebudget();
        //});

        $("#Give_your").on('keyup paste click', function(){

            var charcount=$("#Give_your").val().length;
            //var remaining=200-charcount;
            $("#titlecharcount").text("("+charcount+" of 200)");

        });
        $("#Give_your_Desc").on('keyup paste click', function(){

            var charcount=$("#Give_your_Desc").val().length;
            //var remaining=200-charcount;
            $("#desccharcount").text("("+charcount+" of 2000)");

        });

        $("#TrendingTagsId_chosen").click(function (event) {

            if($("#TrendingTagsId_chosen ul li").length==1)
            {
                $("#errormsg").show();
                event.preventDefault();
                return false;
            }
            else
            {
                $("#errormsg").hide();
                return true;
            }
        });




        //$("#BudgetASPString").on('keypress paste', function (event) {
        //return isNumber(event, this);
        //var _amount=$("#BudgetASPString").val().trim();
        //if(_amount.length==0 && event.which == 48)
        //{
        //    return false;
        //}
        //if(_amount.length>0 && event.which ==110)
        //{
        //    if(_amount.contains('.'))
        //    {
        //        return false;
        //    }

        //}
        //var charCode = (event.which) ? event.which : event.keyCode
        //if (charCode == 46) return true;
        //if (charCode > 31 && (charCode < 48 || charCode > 57))
        //    return false;
        //return true;

        //});
        //function isNumber(evt, element) {
        //    var _amount=$("#BudgetASPString").val().trim();
        //    var charCode = (evt.which) ? evt.which : event.keyCode
        //    if (_amount.length == 0 && charCode == 48 ){
        //        return false;
        //    }
        //    if (
        //        (charCode != 45 || $(element).val().indexOf('-') != -1) &&      // “-” CHECK MINUS, AND ONLY ONE.
        //        (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
        //        (charCode < 48 || charCode > 57))
        //    {
        //        return false;
        //    }


        //    return true;
        //}
        //$("#BudgetASPString").keydown(function (event) {


        //});



        $("#deleteJob").click(function () {
            $("#postjob_view_pop_id").hide();
            openbox(1,'confirm_message_del_pop_id');

        });



        $('#btnSaveJob').unbind().bind('click',   function(e){
            debugger;
            var isvalid = true;
            var isCaptcha = false;
            if(grecaptcha.getResponse() == "") {
                e.preventDefault();
                isCaptcha = false;
                $('#captcha_valid').show();
            } else {
                isCaptcha = true;
                $('#captcha_valid').hide();
            }
            if($("#TrendingTagsId_chosen ul li span").length==0)
            {
                $("#errormsg").show();
                isvalid=false;
                event.preventDefault();
            }
            else
            {
                var TragSelect=$("#TrendingTagsId_chosen ul li span").text();
                if(TragSelect==="--Select--")
                {
                    isvalid=false;
                    $("#errormsg").show();
                    event.preventDefault();
                }
                else
                {
                    $("#errormsg").hide();
                }
            }
            if (!$('#frm').valid()) {
                isvalid=false;
                event.preventDefault();
            }

            if (isvalid==true && isCaptcha)
            {
                $("#errormsg").hide();
                var objTrendingTagsList = [];
                var arrayTags = [];
                $("#TrendingTagsId_chosen ul:first li.search-choice").each(function (index) {
                    var valTags = $(this).text().trim();
                    arrayTags.push(valTags);
                });

                $("#TrendingTagsId > option").each(function () {
                    if (arrayTags.indexOf(this.text) > -1) {
                        if(this.className == 'new-tag') {
                            objTrendingTagsList.push({
                                TrendingTagsId: 0,
                                Description: this.text
                            })
                        } else {
                            objTrendingTagsList.push({
                                TrendingTagsId: this.value,
                                Description: this.text
                            })
                        }
                    }
                });

                var objSkillsMappingList = [];
                var arraySkills = [];

                $("#SkillsId_chosen ul:first li.search-choice").each(function (index) {
                    var valSkills = $(this).text().trim();
                    arraySkills.push(valSkills);
                });

                $("#SkillsId > option").each(function () {
                    if (arraySkills.indexOf(this.text) > -1) {
                        objSkillsMappingList.push({
                            SkillsId: this.value,
                            Description: this.text
                        })
                    }
                });
                //
                var _JobStatus='R'; //$("#JobStatus").val().trim()!=""? $("#JobStatus").val():'R';
                var _JobTitle=toTitleCase($("#Give_your").val().replace(',', ''));
                var _Job = {
                    JobTitle:_JobTitle ,
                    JobDescription: $("#Give_your_Desc").val().replace(',', ''),
                    JobCategoryId: $("#JobCategoryId").val(),
                    BudgetASP: $("#BudgetASPString").val().toString().replace(/,/g, ""),
                    BudgetInDollar: $("#budgetdollar").val().replace(',', ''),
                    Commission: $("#IdCommn").val().toString().replace(/,/g, ""),
                    TotalBudget: $("#IdtotalBudget").val().toString().replace(/,/g, ""),
                    JobCompletionDate: $("#jobcompletionDate").val(),
                    IsActive: 'N',
                    JobStatus: _JobStatus,
                    JobId : $("#JobId").val().replace(',', ''),
                    JobTrendingTagsMappingList: objTrendingTagsList,
                    JobSkillsMappingList: objSkillsMappingList,
                    BudgetASPString: $("#BudgetASPString").val().toString()

                }
                function toTitleCase(str) {
                    return str.replace(/(?:^|\s)\w/g, function(match) {
                        return match.toUpperCase();
                    });
                }
                localStorage.setItem('Job', JSON.stringify(_Job));

                $("#postjob_view_pop_id").hide();
                var _jobmodel= @Html.Raw(Json.Encode(Model));
                if(_jobmodel.JobId==0)
                {
                    $("#confirm_message_pop_id #divmsg").text("Create Job Confirmation");
                    $("#lblmsg").text("Are you sure you want to create this job?");
                    $("#btnjobok").text("Yes create job");
                    $("#btnjobok").prop("title","Yes create job");
                }

                else
                {
                    $("#confirm_message_pop_id #divmsg").text("Edit Job Confirmation");
                    $("#lblmsg").text("Are you sure you want to save the changes?");
                    $("#btnjobok").text("Yes edit job");
                    $("#btnjobok").prop("title","Yes edit job");
                }
                openbox(1,'confirm_message_pop_id');
                $("html, body").animate({ scrollTop: 0 }, "slow");

            }

        })

        $("#JobCategoryId").change(function () {
            $("#TrendingTagsId").empty();
            $("#SkillsId").empty();
            var _JobCategoryId = $("#JobCategoryId").val();
            var _ddlTags = $("#TrendingTagsId");
            var _ddlSkills = $("#SkillsId");
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("GetTagsnSkills", "Jobs")',
                data: { "category": _JobCategoryId, "jobId" : "@Model.JobId" },
                success: function (data) {
                    //$("#TrendingTagsId_chosen .search-field input").val("Select tags");
                    //$("#SkillsId_chosen .search-field input").val("Select special skills");
                    if (_JobCategoryId != '') {

                        //_ddlTags.append('<option value="--Select--" >' + '--Select --' + '</option>');
                        for (var i = 0; i < data.TrendingTagsList.length; i++) {
                            _ddlTags.append('<option value=' + data.TrendingTagsList[i].TrendingTagsId + '>' + data.TrendingTagsList[i].Description + '</option > ');
                        }

                        //_ddlSkills.append('<option value="--Select--">' + '--Select --' + '</option>');
                        for (var j = 0; j < data.JobSkillsList.length; j++) {
                            _ddlSkills.append('<option value=' + data.JobSkillsList[j].SkillsId + '>' + data.JobSkillsList[j].Description + '</option > ');
                        }

                        $("#TrendingTagsId").trigger("chosen:updated");
                        $("#SkillsId").trigger("chosen:updated");
                    }
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });

        });


        $('#btnjobok').unbind().bind('click',   function() {

            closebox('confirm_message_pop_id');
            var _details=  localStorage.getItem('Job');
            var _Job =  JSON.parse(_details)
            localStorage.removeItem('Job');
            if(_Job)
            {
                $.ajax({
                    url: '@Url.Action("SaveJob", "Jobs")',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ job: _Job }),
                    type: "POST",
                    success: function (data) {
                        $("html, body").animate({ scrollTop: 0 }, "slow");
                        openbox(1, 'postjob_confirm_pop_id');
                        //setTimeout(function(){  closebox('postjob_confirm_pop_id');
                        //    window.location.href ="/Dashboard/Index"
                        //}, 3000);
                        $(".jobMsg").html(data);

                    },
                    error: function () {

                    }
                });
            }



        });




        $("#btnjobcancel").click(function(){
            localStorage.removeItem('Job');
            closeboxpostjob('confirm_message_pop_id')
            //closebox('confirm_message_pop_id');
            $("#confirm_message_pop_id #divmsg").text(" ");
            $("#postjob_view_pop_id").show();

        })
        $("#postjobcancel").click(function(){
            closebox('postjob_confirm_pop_id')
            $("#confirm_message_pop_id #divmsg").text(" ");
            location.reload();

        })

        $("#btncancel").click(function(){
            closebox('postjob_confirm_pop_id')
            window.location.href ="/Dashboard/Index";
        });

        $("#btndeleteok").click(function(){
            closebox('confirm_message_del_pop_id')
            var Job = {
                JobId : $("#JobId").val().replace(',', '')
            }
            $.ajax({
                url: '@Url.Action("DeleteJob", "Jobs")',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ job: Job }),
                type: "POST",
                success: function (data) {

                    $("#postjob_view_pop_id").hide();
                    openbox(1, 'postjob_confirm_pop_id');
                    $(".jobMsg").html(data);
                    //setTimeout(function(){  closebox('postjob_confirm_pop_id');
                    //    window.location.href ="/Dashboard/Index"
                    //}, 3000);



                },
                error: function () {

                }
            });
        })

        $("#btndeletecancel").click(function(){
            $("#postjob_view_pop_id").show();
            closebox('confirm_message_del_pop_id');
            document.getElementById('shadowing').style.display = 'block';
        })

        $("#btnjobconfirmClose,#btnjobconfirmYes").click(function(){
            closebox('postjob_confirm_pop_id');
            window.location.href ="/Dashboard/Index";
        })

        
        //click event for enter key
        $("#TrendingTagsId_chosen").find('.chosen-search-input').bind("enterKey", function(e) {
            //get value of text box, and add it to the select.
            var newValue = $(this).val();
            newValue = newValue.replace(/\#/g, '').replace(/\,/g, '');
            if(newValue != '') {
                newValue = '#' + newValue;
            }
       
            // var exists = 0 != $('#TrendingTagsId option[value='+newValue+']').length;
            var exists = 0 != $("#TrendingTagsId option").filter(function (i, o) { return o.value === newValue; }).length;
            //insert if select contains no such value
            if(!exists) {
                //insert newValue into an option HTML with template literals
                var optionHTML =`<option class="new-tag" value="${newValue}" selected>${newValue}</option>`;
                $("#TrendingTagsId").append(optionHTML).trigger("chosen:updated");
                lis++;
            } else {
                //remove no results message li
                $("#TrendingTagsId_chosen").find('.chosen-results').empty();
            }
            //clear the textbox after adding to the select
            $("#TrendingTagsId_chosen").find('.chosen-search-input').val("");
        });
        $("#TrendingTagsId_chosen").find('.chosen-search-input').bind("bsKey", function(e) {
            // var lastVal = $('#TrendingTagsId_chosen .chosen-choices li.search-choice:last').find('span').text();
       
            var exists = 0 != $("#TrendingTagsId option.new-tag").filter(function (i, o) { return o.value === lastTag; }).length;
            if(exists) {
                $("#TrendingTagsId option:contains('" + lastTag + "')").remove();
                $("#TrendingTagsId").trigger("chosen:updated");
            }
        });
        //$("#TrendingTagsId_chosen").find('.chosen-search-input').bind("otherKey", function(e) {
        //    //get value of text box, and add it to the select.
        //    var newValue = $(this).val();
        //    var thval = newValue;
        //    newValue = newValue.replace(/\#/g, '');
        //    var tval = newValue;
        //    if(newValue != '') {
        //        newValue = '#' + newValue;
        //    }
        //    $(".createTag").remove();
        //    // var exists = 0 != $('#TrendingTagsId option[value='+newValue+']').length;
        //    var exists = 0 != $("#TrendingTagsId option").filter(function (i, o) { return o.value === newValue; }).length;            
        //    //insert if select contains no such value
        //    if(!exists && lis > 0) {
        //        //insert newValue into an option HTML with template literals
        //        $('.createTagOpt').remove();
        //        var optionHTML ='<option class="new-tag createTagOpt" value="${newValue}">Create "' + tval + '" as new tag</option>';
        //        //$("#TrendingTagsId").append(optionHTML).trigger("chosen:updated");
        //        var optionHTML ='<li class="active-result createTag" onClick="createNewTag();" data-option-array-index="' + lis + 1 + '">Create "' + tval + '" as new tag</li>';
        //        $(".chosen-results").append(optionHTML);
        //        $("#TrendingTagsId_chosen").find('.chosen-search-input').val(thval);
        //    }
        //    //else {
        //    //    //remove no results message li
        //    //    $("#TrendingTagsId_chosen").find('.chosen-results').empty();
        //    //}
        //    //clear the textbox after adding to the select
        //    //$("#TrendingTagsId_chosen").find('.chosen-search-input').val("");
        //});
        //watch for enter key
        $("#TrendingTagsId_chosen").find('.chosen-search-input').keyup(function(e) {
            lis = $("#TrendingTagsId option").length - 1;
            if (e.keyCode == 13 || e.keyCode == 188) {
                $(this).trigger("enterKey");
            } else if(e.keyCode == 8) {
                $(this).trigger("bsKey");
            }
            //else if (e.keyCode == 188){
            //    $(this).trigger("otherKey");
            //}
        });
        $('#TrendingTagsId').chosen().change(function(){
            lastTag = $('#TrendingTagsId_chosen .chosen-choices li.search-choice:last').find('span').text();
        });
    });




</script>

<script>
    (function() {

        $(".dropzone").dropzone({
            maxFiles: 3,
            url: '/Jobs/UploadDocuments',
            margin: 20,
            params:{
                'action': 'save'
            },
            init: function () {

                thisDropzone = this;
                var DocumentList = @Html.Raw(Json.Encode(Model.JobDocumentsList));
                $.each(DocumentList, function(i, item){
                    var mockFile = {
                        name: item.DocumentName,
                        accepted: true,
                        size:item.Filesize ,
                        kind: "*"
                    };
                    thisDropzone.emit("addedfile", mockFile);
                    thisDropzone.options.thumbnail.call(thisDropzone, mockFile, window.location.origin+'/Documents/'+item.name);
                    thisDropzone.emit("complete", mockFile);
                });
                this.on("maxfilesexceeded", function (data) {
                    var res = eval('(' + data.xhr.responseText + ')');

                });
                this.on("addedfile", function (file) {

                    // Create the remove button
                    var removeButton = Dropzone.createElement("<button class='file_remove_bu'><i class='fa fa-close'></i></button>");
                    // Capture the Dropzone instance as closure.
                    var _this = this;
                    // Listen to the click event
                    removeButton.addEventListener("click", function (e) {
                        // Make sure the button click doesn't submit the form:
                        e.preventDefault();
                        e.stopPropagation();
                        // Remove the file preview.
                        _this.removeFile(file);
                        // If you want to the delete the file on the server as well,
                        // you can do the AJAX request here.
                    });

                    // Add the button to the file preview element.
                    file.previewElement.appendChild(removeButton);
                });
                this.on()
            },
            success: function(res, index){
                console.log(res, index);
            }
        });

    }());
</script>