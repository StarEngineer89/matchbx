@{
    Layout = null;
    var html = ""; var h = "";
}

@if (Model.PurchasedServices != null)
{
    <div id="job_bid_on_id_dash" class="tab-pane fade clearfix active in gig_dash">
        <div class="col-md-12 dash_tab_con_heading_bg padd_left_right_o h3andselect_headingbg clearfix">
            <h3 class="dash_tab_con_heading_h3">Purchased Services <span id="spancount">(@TempData["PurchasedServices"])</span></h3>
            <select id="ddFilter" class="form-control">
                <option value="all" selected>All Jobs</option>
                <option value="jc">Jobs Completed</option>
                <option value="jp">Jobs in Progress</option>
                <option value="pf">Pending Freelancer Acceptance</option>
                <option value="pp">Pending Payment</option>
                <option value="pc">Pending Payment Confirmation</option>
                <option value="pr">Pending Review</option>
            </select>
        </div>
        @foreach (var item in Model.PurchasedServices)
        {
            <div class="col-md-12 dash_jobs_box_1_bg bg_color_comen verified_partner_bg clearfix">
                @if (item.VerifiedPartner == "Y")
                {
                    <div class="verified_partner_box"><span>Verified Partner</span></div>
                }
                <div class="dash_jobs_box_1_inner">
                    <a href="@Url.Action("Details", "Gigs",new { id = item.GigId, subid = 0 })"><h3>@item.GigTitle</h3></a>
                    <div class="timeframe_budget_small clearfix">
                        <div class="timeframe_only"><span>Delivery time: </span>&nbsp;<span>@item.GigDuration Days</span></div>
                        <div class="timeframe_only"><span>Purchased:</span>&nbsp;<span>@item.GigSubscribed Times</span></div>
                        <div class="budget_only"><span>Cost: </span>&nbsp;<span>@String.Concat(item.BudgetASP.ToString("#,##0.00"), " AXPR ", "($", item.DollarCount.ToString("N2"), ")")</span></div>
                        <div class="axp_star_only">
                            <ul>
                                @if (item.BadgeCount == 1)
                                {
                                    <li><i></i></li>
                                }
                                else if (item.BadgeCount == 2)
                                {
                                    <li><i></i></li>
                                    <li><i></i></li>
                                }
                                else if (item.BadgeCount == 3)
                                {
                                    <li><i></i></li>
                                    <li><i></i></li>
                                    <li><i></i></li>
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="home_client_discription_small clearfix">
                        <div class="gig_deliverable_box">
                            <div class="gig_deliverable_box_inn clearfix">
                                <h3 class="">@item.Title</h3>
                                <div class="readmoretext more">
                                    @if (item.GigSubscriptionDisplay != null && item.GigSubscriptionDisplay.Length > 100)
                                    {
                                        html = item.GigSubscriptionDisplay.Substring(0, 100);
                                        h = item.GigSubscriptionDisplay.Substring(100 - 1, item.GigSubscriptionDisplay.Length - 100);
                                    }
                                    else
                                    {
                                        html = item.GigSubscriptionDisplay;
                                    }

                                    @html
                                    @if (item.GigSubscriptionDisplay != null && item.GigSubscriptionDisplay.Length > 100)
                                    {
                                        <span class="moreellipses">...&nbsp;</span>
                                        <span class="morecontent"><span>@h</span>&nbsp;&nbsp;<a href="@Url.Action("Details", "Gigs",new { id = item.GigId, subid = item.GigSubscriptionId })" class="morelink">Read More</a></span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="client_profile_imgname_bg clearfix">
                        <div class="pull-left">
                            <div class="client_profile_pic">
                                <div class="client_profile_pic_1"><img src="@Url.Content("~/" + item.ProfilePic.ToString().Replace("..", ""))" alt=""> </div>
                                <i class="profile_pic_star"></i>
                            </div>
                            <div class="client_profile_name verified_user_checkbg">
                                <a href="@Url.Action("Index", "Profile",new { @id= @item.UserId })">
                                    <h4>
                                        @item.FullName
                                        @if (item.VerifiedPartner == "Y")
                                        {
                                            <i class="verified_user_check"></i>
                                        }
                                    </h4>
                                </a>
                                <span>@item.JobsCompleted jobs complete</span>
                            </div>
                        </div>
                        <!--pull-left-->
                        <div class="pull-right text-right">
                            <div class="company_profile_refedit">
                                @if (item.GigSubscriptionStatus == "A" && item.TransactionType != "D" && item.IsApproved != "Y")
                                {
                                    <a href="#" class="btn button_all secondary_color_2_bg acptenabled" id="btnPayForGig">Pay</a>
                                    <a href="#" class="btn button_all secondary_color_bg acptenabled" id="btnDeclinPay">Decline</a>
                                }
                                <input type="hidden" id="hfGigSubId_@item.GigSubscriptionId" value="@item.GigSubscriptionId" />
                                <input type="hidden" id="hfGigId_@item.GigId" value="@item.GigId" />
                                <input type="hidden" id="hfReqName_@item.PosterFullName" value="@item.PosterFullName" />
                                <input type="hidden" id="hfTokenAddress_@item.TokenAddress" value="@item.TokenAddress" />
                                <input type="hidden" id="hfGigBudget_@item.GigId" value="@item.BudgetASP" />
                                <input type="hidden" id="hfGigTotalBudget_@item.GigId" value="@(item.BudgetASP + item.Commission)" />
                                <input type="hidden" id="hfUserId_@item.UserId" value="@item.UserId" />
                                <input type="hidden" id="hfGigTitle_@item.GigTitle" value="@item.GigTitle" />                                
                            </div>
                        </div>
                        <!--pull-right-->
                    </div>
                </div>
                <!--dash_jobs_box_1_inner-->
                <div class="border_buttom_only"></div>
                <div class="dash_timeremaining_box_bg clearfix">
                    @if (item.GigSubscriptionStatus == "S")
                    {
                        <div class="pull-left">
                            <div class="pending_box_alert panding_alert">Pending Freelancer Acceptance</div>
                        </div>
                        <div class="pull-right dash_time_allmenus">
                            <a href="#" class="dash_time_right_menu" id="cancelSub">Cancel Order</a>
                            <a href="@Url.Action("Details", "Gigs",new { id = item.GigId, subid = item.GigSubscriptionId })" class="dash_time_right_menu" id="editSub">Edit Order</a>
                            <input type="hidden" id="hfGigId_@item.GigId" value="@item.GigId" />
                            <input type="hidden" id="hfGigSubId_@item.GigSubscriptionId" value="@item.GigSubscriptionId" />
                        </div>
                    }
                    else if (item.GigSubscriptionStatus == "A" && item.TransactionType == "D" && item.IsApproved != "Y")
                    {
                        <div class="pull-left"><div class="pending_box_alert panding_alert">Pending Payment Confirmation</div></div>
                        <div class="pull-right dash_time_allmenus">
                            @*<a href="#" onclick="LoadMessages('GigPurchased',@Html.Raw(Json.Encode(Session["UserId"])),'@item.FullName','',@item.JobId, '@item.GigTitle',@item.UserId, event)" class="dash_time_right_menu">Send Message</a>*@
                        </div>
                    }
                    else if (item.GigSubscriptionStatus == "A" && item.TransactionType != "D" && item.IsApproved != "Y")
                    {
                        <div class="pull-left"><div class="pending_box_alert panding_alert">Pending Payment</div></div>
                        <div class="pull-right dash_time_allmenus">
                            @*<a href="#" onclick="LoadMessages('GigPurchased',@Html.Raw(Json.Encode(Session["UserId"])),'@item.FullName','',@item.JobId, '@item.GigTitle',@item.UserId, event)" class="dash_time_right_menu">Send Message</a>*@
                        </div>
                    }
                    else if (item.GigSubscriptionStatus == "J" && item.JobStatusSeeker == "C" && item.JobStatus == "A")
                    {
                        <div class="pull-left"><div class="pending_box_alert panding_alert">Pending Review</div></div>
                        <div class="pull-right dash_time_allmenus">
                            <a href="#" id="btnComplete" class="dash_time_right_menu decenabled" title="Mark as Complete">Mark as Complete</a>
                            <a href="#" onclick="LoadMessages('GigPurchased',@Html.Raw(Json.Encode(Session["UserId"])),'@item.FullName','',@item.JobId, '@item.Title',@item.UserId, event)" class="dash_time_right_menu">Send Message</a>
                            <input type="hidden" id="hfJobId_@item.JobId" value="@item.JobId">
                            <input type="hidden" id="hfJobPosterId_@item.UserId" value="@item.UserId">
                            <input type="hidden" id="hfJobtitle_@item.JobId" value="@item.Title">
                            <input type="hidden" id="hfUserRole_@item.JobId" value="P">
                            <input type="hidden" id="hfSeekerName_@item.JobId" value="@item.FullName">
                            <input type="hidden" id="hfPostername_@item.JobId" value="@item.PosterFullName">
                            <input type="hidden" id="hfSeekerId_@item.JobId" value="@Session["UserId"].ToString()" />
                            <input type="hidden" id="hfGigId_@item.JobId" value="@item.GigId">
                            <input type="hidden" id="hfGigSubId_@item.JobId" value="@item.GigSubscriptionId">
                        </div>
                    }
                    else if (item.GigSubscriptionStatus == "J" && item.IsApproved == "Y" && item.JobStatus != "C")
                    {
                        <div class="pull-left"><div class="pending_box_alert progress_alert">Job in Progress</div></div>
                        <div class="pull-right dash_time_allmenus">
                            <a href="#" onclick="LoadMessages('GigPurchased',@Html.Raw(Json.Encode(Session["UserId"])),'@item.FullName','',@item.JobId, '@item.Title',@item.UserId, event)" class="dash_time_right_menu" id="">Send Message</a>
                        </div>
                    }
                    else if(item.JobStatus == "C")
                    {
                        <div class="pull-left"><div class="pending_box_alert completed_alert">Job Completed</div></div>
                    }
                    <input type="hidden" id="hfGigSubId_@item.GigSubscriptionId" value="@item.GigSubscriptionId" />
                    <input type="hidden" id="hfGigId_@item.GigId" value="@item.GigId" />
                </div>
            </div>
        }
        @if (Model.PurchasedServices != null && Model.PurchasedServices.Count == 0)
        {
            <script>
                $(function() {
                    $('#ddFilter').hide();
                });
            </script>
            <div class="nojob_diplytable" id="divmsg">
                <div class="col-md-12 category_nojob_bg clearfix">
                    <h3>You have not purchased a service yet</h3>
                    <a href="/Gigs/Search" class="btn button_all secondary_color_bg">HIRE FREELANCER</a>
                </div>
            </div>
        }
        @if (Model.PurchasedServices != null && Model.PurchasedServices.Count > 0 && Model.PurchasedServices[0].Isloadmore == 1)
        {
            <div class="col-md-12 category_loadmore_bg clearfix" id="divloadmore">
                <a href="javascript:" class="btn button_all secondary_color_bg" id="btnloadmore">Load more</a>
            </div>
        }
        <input type="hidden" id="hfjobtitle" />
        <input type="hidden" id="hfuserid" />
        <input type="hidden" id="hfrole" />
        <input type="hidden" id="hfseekername" />
        <input type="hidden" id="hfpostername" />
        <input type="hidden" id="hfseekerId" />
        <input type="hidden" id="hfgigSubId" />
    </div>
}
<script type="text/javascript">
    var _Id, _ReqUser, _TokenAddress, _SubId, _GigBudget,_SeekerId,_GigTitle;

    var chat = $.connection.chatHub;
    var notification = $.connection.notificationHub;
    var _hubid = $.connection.hub.id;
    var filterBy = "all";

    $(document).ready(function () {
        var _count = $("#spancount").text();
        $("#purchasedService span").text(_count);

        $("#job_bid_on_id_dash").on("click", "#cancelSub", function () {
            _Id = $(this).parent().find('input[id^="hfGigId_"]').val();
            _SubId = $(this).parent().find('input[id^="hfGigSubId_"]').val();
            openbox(1, 'gigSubscriptionCancel_pop');
        });

        $("#gigCancelSubOk").click(function () {
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("CancelSubscription", "Dashboard")',
                data: { 'gigId': _Id, 'subId': _SubId },
                success: function (response) {
                    closebox('gigSubscriptionCancel_pop');
                    // window.location.reload();
                    openbox(1, 'gigSubscriptionCancelSuccess');
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        });

        $('#cancelOrderOk').click(function() {
            closebox('gigSubscriptionCancelSuccess');
            $('#purchasedService').trigger('click');
        });

        $("#job_bid_on_id_dash").on("click", "#btnloadmore", function () {
            var _Id = $('#job_bid_on_id_dash div.dash_timeremaining_box_bg').last().find('input[id^="hfGigSubId_"]').val();
            LoadMore(_Id);
        })

        function LoadMore(id) {
            $("#divloadmore").hide();
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("LoadMoreServices", "Dashboard")',
                data: { 'type': 'purchasedservices', 'id': id, 'filterBy': filterBy },
                success: function (response) {
                    $("#divloadmore").remove();
                    $('#job_bid_on_id_dash').append(response);
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        }

        $("#job_bid_on_id_dash").on("click", "#btnPayForGig", function () {
            _Id = $(this).parent().find('input[id^="hfGigId_"]').val();
            _SubId = $(this).parent().find('input[id^="hfGigSubId_"]').val();
            _ReqUser = $(this).parent().find('input[id^="hfReqName_"]').val();
            _SeekerId = $(this).parent().find('input[id^="hfUserId_"]').val();
            _GigTitle = $(this).parent().find('input[id^="hfGigTitle_"]').val();
            _TotalBudget = $(this).parent().find('input[id^="hfGigTotalBudget_"]').val();
            _TokenAddress = $(this).parent().find('input[id^="hfTokenAddress_"]').val(); 
            _GigBudget = $(this).parent().find('input[id^="hfGigBudget_"]').val();
            $('#gigPayForGig_title').text('Pay Confirmation');
            $('#gigPayForGig_msg').text('Are you sure you want to pay');
            $('#gigPayOk').show();
            $('#gigNoPayOk').hide();
            openbox(1, 'gigPayForGig_pop');
        });

        $("#job_bid_on_id_dash").on("click", "#btnDeclinPay", function () {
            
            _Id = $(this).parent().find('input[id^="hfGigId_"]').val();
            _SubId = $(this).parent().find('input[id^="hfGigSubId_"]').val();
            _ReqUser = $(this).parent().find('input[id^="hfReqName_"]').val();
            _SeekerId = $(this).parent().find('input[id^="hfUserId_"]').val();
            _GigTitle = $(this).parent().find('input[id^="hfGigTitle_"]').val();
            _TotalBudget = $(this).parent().find('input[id^="hfGigTotalBudget_"]').val();
            _TokenAddress = $(this).parent().find('input[id^="hfTokenAddress_"]').val();
            _GigBudget = $(this).parent().find('input[id^="hfGigBudget_"]').val();
            $('#gigPayForGig_title').text('Decline pay');
            $('#gigPayForGig_msg').text('Are you sure you want to decline the payment');
            $('#gigPayOk').hide();
            $('#gigNoPayOk').show();
            openbox(1, 'gigPayForGig_pop');
        });

        $("#job_bid_on_id_dash").on("click", "#btnComplete", function (event) {
            var _jobid = $(this).parent().find('input[id^="hfJobId_"]').val();
            var _userid = $(this).parent().find('input[id^="hfJobPosterId_"]').val();
            var _jobtitle = $(this).parent().find('input[id^="hfJobtitle_"]').val();
            var _userrole = $(this).parent().find('input[id^="hfUserRole_"]').val();
            var _jobseekername = $(this).parent().find('input[id^="hfSeekerName_"]').val();
            var _jobpostername = $(this).parent().find('input[id^="hfPostername_"]').val();
            var _jobsekerId = $(this).parent().find('input[id^="hfSeekerId_"]').val();
            var _hfgigSubId = $(this).parent().find('input[id^="hfGigSubId_"]').val();

            _SubId = $(this).parent().find('input[id^="hfGigSubId_"]').val();

            debugger;
            $("#hfjobtitle").val(_jobtitle);
            $("#hfjobid").val(_jobid);
            $("#hfuserrole").val(_userrole);
            $("#hfuserid").val(_userid);
            $("#hfseekername").val(_jobseekername);
            $("#hfpostername").val(_jobpostername);
            $("#hfseekerId").val(_jobsekerId);
            $("#spnJobTitle").html(_jobtitle);
            $("#hfgigSubId").val(_hfgigSubId);
            openbox(1, 'mark_complete_confirmation_pop_id');
            event.preventDefault();
        });

        var $star_rating = $('.star-rating .fa');
        var SetRatingStar = function () {
            //
            return $star_rating.each(function () {
                if (parseInt($star_rating.siblings('input.rating-value').val()) >= parseInt($(this).data('rating'))) {
                    return $(this).removeClass('fa_star_gray').addClass('fa_star_active');
                } else {
                    return $(this).removeClass('fa_star_active').addClass('fa_star_gray');
                }

            });
            var _ratings = $("#txtrating").val();
            //alert(_ratings);
            RateJobs(_ratings)
        };

        $star_rating.on('click', function () {
            debugger;
            $star_rating.siblings('input.rating-value').val($(this).data('rating'));
            var _rating = $("#txtrating").val();
            var _jobid = $("#hfjobid").val();
            var _userrole = $("#hfuserrole").val();
            //RateJobs(_jobid, _rating, _userrole)
            return SetRatingStar();
        });

        $("#btnGigrvwSub").unbind("click").bind( "click",function()
        {
            debugger;
            var _rating = $("#txtrating").val();
            var _jobid = $("#hfjobid").val();
            var _userrole = $("#hfuserrole").val();
            RateJobs(_jobid, _rating, _userrole);
        });

        SetRatingStar();
        function RateJobs(jobid, ratings, userrole) {
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("RateUser", "Dashboard")',
                data: { 'JobId': jobid, 'rating': ratings, 'UserRole': userrole },
                success: function (response) {
                    debugger;
                    if($("#hfgigSubId").val() > 0 && $("#hfuserrole").val() == "P" && $("#txtgigReview").val() != "")
                    {
                        var _GigReview = {
                            JobId:$("#hfjobid").val(),
                            Review: $("#txtgigReview").val(),
                            GigReviewStatus: 'R',
                            GigSubscriptionId: $("#hfgigSubId").val()
                        }
                        $.ajax({
                            type: 'POST',
                            cache:false,
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({ GigReview: _GigReview }),
                            url: '@Url.Action("ReviewGig", "Dashboard")',
                            success: function (response) {
                                closebox('mark_complete_rating_pop_id');
                                $('#purchasedService').trigger('click');
                            }
                        });
                    }
                    else
                    {
                        closebox('mark_complete_rating_pop_id');
                        $('#purchasedService').trigger('click');
                    }

                },
                error: function (jqXHR, exception) {

                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        }

        $("#popupReview").click(function () {
            closebox('mark_complete_rating_pop_id');
            $('#purchasedService').trigger('click');
        });

        $('#dontReview').click(function() {
            closebox('mark_complete_rating_pop_id');
            $('#purchasedService').trigger('click');
        });

        $('#ddFilter').change(function() {
            debugger;
            var _Id = $('#job_bid_on_id_dash div.dash_timeremaining_box_bg').last().find('input[id^="hfGigSubId_"]').val();
            if(filterBy != this.value) {
                _Id = 0;
            }
            filterBy = this.value;
            $('.dash_jobs_box_1_bg').remove();
            $('.nojob_diplytable').remove();
            switch(filterBy) {
                case 'jc': LoadMore(_Id); break;
                case 'jp': LoadMore(_Id); break;
                case 'pf': LoadMore(_Id); break;
                case 'pp': LoadMore(_Id); break;
                case 'pc': LoadMore(_Id); break;
                case 'pr': LoadMore(_Id); break;
                default: LoadMore(_Id); break;
            }
        });
    });

    //function filterJobs(by) {
    //    var displayedJobs = 0;
    //    $('.dash_jobs_box_1_bg').each(function(index, element) {
    //        if (by != 'All') {
    //            if($(this).find('.pending_box_alert').text().toUpperCase().indexOf(by.toUpperCase()) != -1){
    //                $(this).show();
    //                displayedJobs++;
    //            } else {
    //                $(this).hide();
    //            }
    //        } else {
    //            $(this).show();
    //        }
    //    });
    //    if(displayedJobs == 0) {
    //        $('#btnloadmore').hide();
    //    } else {
    //        $('#btnloadmore').show();
    //    }
    //}

    function LoadMessages(_from, _prmSendUserId, _prmJobSeeker, _prmBidUserProfilePic, _prmJobId, _prmJobTitle, _prmReceiverId, evt) {
        $.ajax({
            type: 'POST',
            cache: false,
            url: '@Url.Action("ChatForSendMessage", "Home")',
            data: { "_prmSendUserId": _prmSendUserId, "from": _from, "_prmJobSeeker": _prmJobSeeker, "_prmBidUserProfilePic": _prmBidUserProfilePic, "_prmJobID": _prmJobId, "_prmJobTitle": _prmJobTitle, "_prmReceiverId": _prmReceiverId },
            success: function (response) {
                $("#divChat").html(response);
                openbox(1, 'divChat');
            },
            error: function (jqXHR, exception) {
                console.log(jqXHR.status);
                console.log(exception);
            }
        });
        evt.preventDefault();
    }

    $.connection.hub.start().done(function () {
        $('#gigPayOk').unbind("click").bind('click', function() {

            var _gigAmount = _TotalBudget;
            var _posterid = @Session["UserId"];
            var _pendingbidAmount = 0;
            function callback(pendingbidAmount, result)
            {
                if(result = "success")
                {
                    _pendingbidAmount = pendingbidAmount;

                    function callback(address, result) {

                        if (address == 'error' || address == '') {
                            closebox('gigPayForGig_pop');
                            openbox(1, 'metamask_comfirmation_id');
                        }
                        else {
                            var _jobid = $("#hfjobidPop").val();
                            var _jobbiddingid = $("#hfjobbiddingidPop").val();
                            var _jobtitle = $("#hfjobtitlePop").val();
                            var _receiverUserId = $("#hfuseridPop").val();

                            if (result == 'approved') {
                                AcceptGigOffer(_SubId, "A");
                            } else if (result == 'reset') {
                                closebox('gigPayForGig_pop');
                                openbox(1, 'metamaskreset');

                            } else if (result == 'insufficient') {
                                closebox('gigPayForGig_pop');
                                openbox(1, 'metamaskinsufficientamount');
                            }
                            else {
                                closebox('gigPayForGig_pop');
                                openbox(1, 'metamaskamountempty');
                            }
                        }
                    }                    
                    App.handleAllowance(Number(_gigAmount) + _pendingbidAmount, callback);
                }
            }

            CheckApproveAmount(_posterid, callback);

            //App.getUserAddress(callback);

        });

        function CheckApproveAmount(UserId,callback)
        {
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("CheckApprovedAmount", "Dashboard")',
                data: { 'UserId': UserId },
                success: function (response) {
                    _pendingbidAmount = response.Amount;
                    callback(_pendingbidAmount,"success");
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                    callback(0,"failed");
                }
            });
        }

        function AcceptGigOffer(GigSubscriptionId, status) {   
            $("#loaderDiv").show();
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("GigOffer", "Gigs")',
                data: { 'GigSubscriptionId': GigSubscriptionId, 'Status': status },
                success: function (response) {                   
                    var _sendUserId = "@Session["UserId"]";
                    var _fullname = _ReqUser;
                    var _Title = _GigTitle;
                    var _receiverUserId = "@Session["UserId"]";
                    var _userName = "@Session["FullName"]";
                    var _notification = "";
                    var _header = "";
                    var _Url = "";      
                    if (response.JobId != 0) {                        
                        var jobid = response.JobId                       
                        if (status == "A") {

                            function callback(result)
                            {
                                if(result == "success")
                                {                                    
                                    _notification = "Waiting for confirmation of payment for service " + _Title + ". Once this is confirmed, " + _fullname + " can get started."
                                    _header = "Transaction Waiting";
                                    $.connection.hub.start().done(function () {
                                        notification.server.send(_sendUserId, _receiverUserId, _fullname, _notification, _header, _Url);
                                    }).fail(function(){ console.log('Could not connect'); });

                                    closebox('gigPayForGig_pop');
                                }
                            }
                            SaveTransactionDetail(jobid, _sendUserId, 'D', 'D', '', _GigBudget,'',callback);
                        }                       

                        if (status == "A") {
                            function callBack(txhash) {
                                console.log(txhash);                               
                                if (txhash == 'undefined') {
                                    closebox('offer_comfirmation_id_list');
                                    openbox(1, 'openmetamask_comfirmation_id');
                                } else if (txhash == 'cancelled') {
                                    MetaMaskCancel(jobid);
                                    location.reload();
                                } else {
                                    UpdateTransactionDetail(jobid, _sendUserId, 'D', 'D', txhash, _GigBudget);
                                    //location.reload();
                                    //$('#purchasedService').trigger('click');
                                    //setTimeout(function () {
                                    //    $('#purchasedService').trigger('click');
                                    //}, 5000);
                                    closebox('gigPayForGig_pop');
                                }
                            }

                            App.handleDeposit(jobid, _TokenAddress, _GigBudget * Math.pow(10, 18), callBack);
                        }
                        $("#loaderDiv").hide();
                    } 
                    else 
                    {
                        _receiverUserId = _SeekerId;
                        _notification = "Payment for the service " + _Title + " is declined.";
                        _header = "Service payment declined";
                        $.connection.hub.start().done(function () {
                            notification.server.send(_sendUserId, _receiverUserId, _fullname, _notification, _header, _Url);
                        }).fail(function(){ console.log('Could not connect'); });

                        setTimeout(function () {
                            $("#loaderDiv").hide();
                            closebox('gigPayForGig_pop');
                            $('#purchasedService').trigger('click');
                        }, 5000);
                        //$('#purchasedService').trigger('click');
                    }

                    //JobsListedWithoutExchangeRate();

                },
                error: function (jqXHR, exception) {

                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        }

        function SaveTransactionDetail(jobid, userid, transactiontype, processtype, hash, bidamount, address,callback) {
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("SaveTransactionDetail", "Dashboard")',
                data: { 'JobId': jobid, 'UserId': userid, 'TransactionType': transactiontype, 'ProcessType': processtype, 'Hash': hash, 'BidAmount': bidamount, 'Address': address },
                success: function (response) {
                    callback("success");
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                    callback("failed")
                }
            });
        }

        function UpdateTransactionDetail(jobid, userid, transactiontype, processtype, hash) {
            $("#loaderDiv").show();
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("UpdateTransactionDetail", "Dashboard")',
                data: { 'JobId': jobid, 'UserId': userid, 'TransactionType': transactiontype, 'ProcessType': processtype, 'Hash': hash },
                success: function (response) {
                    $("#loaderDiv").hide();
                    $('#purchasedService').trigger('click');
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        }

        function MetaMaskCancel(jobid) {
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Action("MetaMaskCancel", "Dashboard")',
                data: { 'JobId': jobid },
                success: function (response) {

                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR.status);
                    console.log(exception);
                }
            });
        }

        $('#gigNoPayOk').on('click',function(){
            AcceptGigOffer(_SubId, 'D');
        });
        $('#btnResetMetaMask').unbind("click").bind("click", function () {
            function callback(address) {
                if (address == 'error' || address == '') {
                    openbox(1, 'metamask_comfirmation_id');
                    // closebox('offer_comfirmation_id');
                }
                else {
                    var _userid = @Session["UserId"];
                    $.ajax({
                        type: 'POST',
                        cache: false,
                        url: '@Url.Action("ResetWallet", "Dashboard")',
                        data: { 'WalletAddress': address, 'UserId': _userid },
                        success: function (response) {
                            if (response == "Success") {
                                //location.reload();
                                App.resetApproveBalance();
                                closebox('metamaskreset');
                                $('#metamask').addClass('header_loged_menua_metamask');
                                $('.balance').html('<span>Reset</span><span>Wallet</span>');
                                localStorage.setItem("Metamask", "A");
                            }
                        }
                    });
                }
            };
            App.getUserAddress(callback);
        });
        $('#btnApproveMetaMask').click(function () {
            closebox('metamaskamountempty');
            function balCallBack(res){
                if(res == 'empty')
                {
                    openbox(1, "metamaskempty");
                } else if (res == 'ethempty') {
                    openbox(1, "ethempty");
                }
                else if(res == 'isbalance')
                {
                    var userid = @Session["UserId"];
                    var Hash = localStorage.getItem("Address");
                    $('#metamask').addClass('header_loged_menua_metamask');
                    $('.balance').html('<span>Authorisation </span><span>pending</span>');
                    $('#metamask').attr('onclick', '');
                    localStorage.setItem("Metamask", "P");
                    function callback(result)
                    {
                        if(result == "success")
                        {
                            function callback(result){
                                if(result =='cancelled'){
                                    //SaveTransactionDetail(1,userid,'A','A',Hash,0);
                                }
                                else
                                {
                                    location.reload();
                                }
                            }
                            App.handleApprove(callback);
                        }
                    }
                    SaveTransactionDetail(0,userid,'A','A','',0,Hash,callback);
                }
            }
            App.checkBalance(balCallBack);
        });

        $('#btnyes1').unbind("click").bind( "click",function () {
            var _jobtitle = $("#hfjobtitle").val();
            var _jobid = $("#hfjobid").val();
            var _userrole = $("#hfuserrole").val();
            var _userid = ""
            if (_userrole == "P") {
                _userid = $("#hfseekerId").val();
                var name = $("#hfseekername").val();
                $("#spname").text(name);
                $("#spanrole").text("Review");
            }
            else if (_userrole == "S") {
                _userid = $("#hfuserid").val();
                var name = $("#hfpostername").val();
                $("#spname").text(name);
                $("#spanrole").text("Review");
            }
            MarkasComplete(_jobid, _userid, _jobtitle, _userrole);
        });

    });

    function MarkasComplete(jobid, userid, jobtitle, userrole) {

        var chat = $.connection.chatHub;
        var notification = $.connection.notificationHub;
        var _hubid=  $.connection.hub.id;
        $.ajax({
            type: 'POST',
            cache: false,
            url: '@Url.Action("MarkasComplete", "Dashboard")',
            data: { 'JobId': jobid, 'UserRole': userrole, 'UserId': userid, 'JobTitle': jobtitle },
            success: function (response) {
                var _sendUserId= @Html.Raw(Json.Encode(Session["UserId"]));
                var _fullname = @Html.Raw(Json.Encode(Session["FullName"]));
                var _header = "Job completed";
                var _notification = "";
                var _receiverUserId = "";
                var _Url = "/Jobs/Details/" + jobid;
    debugger
                var _gigSubId = $("#hfgigSubId").val();

                if (userrole == 'P') {
                    _receiverUserId = userid;
                    _notification =" Your payment for " + jobtitle + " is being processed and should be on its way";
                    $.connection.hub.start().done(function () {
                        notification.server.send(_sendUserId, _receiverUserId, _fullname, _notification, _header, _Url);
                    }).fail(function(){ console.log('Could not connect'); });;
                    //notification.server.send(_sendUserId, _receiverUserId, _fullname, _notification, _header, _Url);

                    var _posterid = $("#hfuserid").val();
                    function callback(result)
                    {
                        debugger;
                        if(result =="Success")
                        {
                            closebox('mark_complete_confirmation_pop_id');
                            if(_gigSubId > 0)
                            {
                                $("#divGigReview").val("");
                                $("#divGigReview").css("display", "block");
                            }
                            else
                            {
                                $("#divGigReview").css("display", "none");
                            }
                            openbox(1, 'mark_complete_rating_pop_id');
                        }
                        else
                        {
                            setTimeout(function () {
                                closebox('mark_complete_confirmation_pop_id');
                                $('#purchasedService').trigger('click');
                            }, 5000);
                        }
                    }
                    SaveTransactionDetail(jobid,_posterid,'S','C','',0,'',callback); // save spent transaction details
                }
                else
                {
                    _receiverUserId = userid;
                    _notification ="@@"+@Html.Raw(Json.Encode(Session["UserName"]))  + " just marked " + jobtitle + " as complete - please check the job and when you're happy, mark it also as complete";
                    notification.server.send(_sendUserId, _receiverUserId, _fullname, _notification, _header, _Url);
                    closebox('mark_complete_confirmation_pop_id');
                    $("#divGigReview").css("display", "none");
                    openbox(1, 'mark_complete_rating_pop_id');
                }
            },
            error: function (jqXHR, exception) {
                console.log(jqXHR.status);
                console.log(exception);
            }
        });
    }

    function SaveTransactionDetail(jobid, userid, transactiontype, processtype, hash, bidamount, address,callback) {

        $.ajax({
            type: 'POST',
            cache: false,
            url: '@Url.Action("SaveTransactionDetail", "Dashboard")',
            data: { 'JobId': jobid, 'UserId': userid, 'TransactionType': transactiontype, 'ProcessType': processtype, 'Hash': hash, 'BidAmount' : bidamount, 'Address' : address },
            success: function (response) {
                callback(response);

            },
            error: function (jqXHR, exception) {
                console.log(jqXHR.status);
                console.log(exception);
            }
        });
    }
</script>