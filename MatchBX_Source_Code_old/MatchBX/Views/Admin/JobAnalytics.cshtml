@model Business.Analytics
@{
    ViewBag.Title = "JobAnalytics";
    var posters = Model.Posters;
    var category = Model.Categories;

}
@*<style>
    .goog-tooltip div {
        background-color: white !important;
        border: 1px solid black !important;
        color: black !important;
        font-size: 12px !important;
    }
</style>
<link rel="stylesheet" href="@Url.Content("~/Content/css/google_chart.css")"/>*@
<div class="jobanalytics_graphs_bgbg clearfix">
    <div class="jobanalytics_graphs_top_head dash_tab_con_heading_bg padd_left_right_o">
        <h3 class="dash_tab_con_heading_h3">Job Analytics</h3>
    </div>
    <!--tab div section-->
    <div class="jobanalytics_graphs_bg jobanalytics_graphs_top dash_jobs_box_1_bg bg_color_comen clearfix">
        <div class="col-md-4">
            <b id="totalJobs">@Model.TotalJobs</b>
            <p>Jobs</p>
        </div>
        <div class="col-md-4">
            <b id="totalPosters">@Model.TotalJobPosters</b>
            <p>Job Posters</p>
        </div>
        <div class="col-md-4">
            <b id="totalBudget"></b>
            <p>AXPR</p>
        </div>
    </div>
    <div class="jobanalytics_graphs_bg dash_jobs_box_1_bg bg_color_comen  clearfix" id="divcontent">
        <div id="imgloader" style="display:none;position: absolute;  top: 0;left: 0; right: 0; text-align: center; background: #fff;z-index: 5; padding: 20px;">
            <img src="~/Content/images/loader.gif" />
        </div>
        <div id="pie_chart_div" class="clearfix"></div>
        <div id="column_chart_div" class="clearfix"></div>
        <div id="table_chart_div" class="clearfix"></div>
    </div>
</div><!-- // tab div section-->

<script type="text/javascript">
    

    $(document).ready(function() {
        var budget = '@Model.TotalBudget';
        $('#totalBudget').text(Number(budget).toLocaleString('en-US'));
        var chartData = @Html.Raw(Json.Encode(Model.JobAnalytics));
        var jobChartObject = [], jobChartObjectPrime = [], jobChartObjectByDate = [];
        var jobChartObjectByProperty = [], jobChartObjectByPropertyPrime = [], jobChartForTable = [];
        var jobChartByPosters = [];
        var totalJobs = @Model.TotalJobs;
        var chartBar, chartPie, chartColumn, chartTable;
        GroupData(chartData);
        PresetForColumnChart(chartData);
        jobChartObjectByPropertyPrime = jobChartObjectByProperty;
        LoadGoogleChart();

        function GroupData(_chartData) {
            $.each(_chartData, function(i, item) {
                var found = jobChartObject.some(function (el) {
                    return el.Category === item.Category;
                });
                if (!found) {
                    var obj = {
                        Category: item.Category,
                        Count: 1
                    }
                    jobChartObject.push(obj);
                } else {
                    var index = $.map(jobChartObject, function(obj, index) {
                        if(obj.Category == item.Category) {
                            return index;
                        }
                    });
                    jobChartObject[index].Count += 1;
                }
            });
            //jobChartObjectPrime = jobChartObject;
            console.log(jobChartObject);
        }

        //function GroupDataByRange(_chartData, _range) {
        //    return new Promise(function(resolve,reject) {
        //        var _tempChartData = [];
        //        if(_range) {
        //            _chartData.sort(function(a,b){
        //                var aD = a.Date.split(' ')[0].split('/');
        //                var bD = b.Date.split(' ')[0].split('/');
        //                var c = new Date(aD[2], aD[1] - 1, aD[0]).getMonth();
        //                var d = new Date(bD[2], bD[1] - 1, bD[0]).getMonth();
        //                var e = new Date(aD[2], aD[1] - 1, aD[0]).getFullYear();
        //                var f = new Date(bD[2], bD[1] - 1, bD[0]).getFullYear();
        //                var g = new Date(aD[2], aD[1] - 1, aD[0]).getDate();
        //                var h = new Date(bD[2], bD[1] - 1, bD[0]).getDate();
        //                if(e == f) {
        //                    if(c == d) {
        //                        return g - h;
        //                    } else {
        //                        return c - d;
        //                    }
        //                } else {
        //                    return e - f;
        //                }
        //            });
        //            _chartData.reverse();
        //            if(_chartData.length > 0) {
        //                //var cDate = _chartData[0].Date.split(' ')[0].split('/');
        //                newDate = new Date();
        //                if(_range) {
        //                    newDate = new Date(newDate.setDate(newDate.getDate() - _range));
        //                }
        //            }

        //            $.each(_chartData, function(i, item) {  
        //                var iDate = item.Date.split(' ')[0].split('/');
        //                if(newDate <= new Date(iDate[2], iDate[1] - 1, iDate[0])) {
        //                    _tempChartData.push(item);
        //                }
        //            });

        //            $.each(_tempChartData, function(i, item) {
        //                var found = jobChartObject.some(function (el) {
        //                    return el.Category === item.Category;
        //                });
        //                if (!found) {
        //                    var obj = {
        //                        Category: item.Category,
        //                        Count: 1
        //                    }
        //                    jobChartObject.push(obj);
        //                } else {
        //                    var index = $.map(jobChartObject, function(obj, index) {
        //                        if(obj.Category == item.Category) {
        //                            return index;
        //                        }
        //                    });
        //                    jobChartObject[index].Count += 1;
        //                }
        //            });
        //        }
        //    })
        //}

        function GroupDataByRange(_chartData, _range) {
            return new Promise(function(resolve,reject) {
                var _tempChartData = [];
                if(_range) {
                    _chartData.sort(function(a,b){
                        var aD = a.Date.split(' ')[0].split('/');
                        var bD = b.Date.split(' ')[0].split('/');
                        var c = new Date(aD[2], aD[1] - 1, aD[0]).getMonth();
                        var d = new Date(bD[2], bD[1] - 1, bD[0]).getMonth();
                        var e = new Date(aD[2], aD[1] - 1, aD[0]).getFullYear();
                        var f = new Date(bD[2], bD[1] - 1, bD[0]).getFullYear();
                        var g = new Date(aD[2], aD[1] - 1, aD[0]).getDate();
                        var h = new Date(bD[2], bD[1] - 1, bD[0]).getDate();
                        if(e == f) {
                            if(c == d) {
                                return g - h;
                            } else {
                                return c - d;
                            }
                        } else {
                            return e - f;
                        }
                    });
                    _chartData.reverse();
                    if(_chartData.length > 0) {
                        //var cDate = _chartData[0].Date.split(' ')[0].split('/');
                        newDate = new Date();
                        if(_range) {
                            newDate = new Date(newDate.setDate(newDate.getDate() - _range));
                        }
                    }

                    $.each(_chartData, function(i, item) {  
                        var iDate = item.Date.split(' ')[0].split('/');
                        if(newDate <= new Date(iDate[2], iDate[1] - 1, iDate[0])) {
                            _tempChartData.push(item);
                        }
                    }); 
    
                    $.each(_tempChartData, function(i, item) {
                        var found = jobChartObject.some(function (el) {
                            return el.Category === item.Category;
                        });
                        if (!found) {
                            var obj = {
                                Category: item.Category,
                                Count: 1
                            }
                            jobChartObject.push(obj);
                        } else {
                            var index = $.map(jobChartObject, function(obj, index) {
                                if(obj.Category == item.Category) {
                                    return index;
                                }
                            });
                            jobChartObject[index].Count += 1;
                        }
                    });  
                    resolve(_tempChartData);                
                }
            })
        }

        function FilterByDate(_chartData, _date) {
            var _tempData = [];
            var dte = new Date(_date);
            $.each(_chartData, function(i, item) {
                if(dte <= new Date(item.Date)) {
                    _tempData.push(item);
                }
            });
            return _tempData;
        }

        function filterByProperty(_chartData, _property, _value) {
            var _tempData = [];
            $.each(_chartData, function(i, item) {
                if(item[_property] == _value) {
                    _tempData.push(item);
                }
            });
            return _tempData;
        }

        function CommonfilterByProperty() {
            var tempData = [], _tempData = [];
            var _postersid = $('#posters').val();
            var _categorid = $('#category').val();
            var _daterange = Number($('#date-range').val());

            if(_postersid != 'all' && _categorid != 'all'){
                $.each(chartData, function(i, item) {
                    if(item['PosterBy'] == _postersid && item['Category'] == _categorid) {
                        _tempData.push(item);
                    }
                });
                tempData = _tempData;
            } else if (_postersid == 'all' && _categorid != 'all') {
                $.each(chartData, function(i, item) {
                    if(item['Category'] == _categorid) {
                        _tempData.push(item);
                    }
                });
                tempData = _tempData;
            } else if(_postersid != 'all' && _categorid == 'all') {
                $.each(chartData, function(i, item) {
                    if(item['PosterBy'] == _postersid) {
                        _tempData.push(item);
                    }
                });
                tempData = _tempData;
            } else {
                tempData = chartData;
            }
             
            //if(_postersid!='all'){
            //    $.each(chartData, function(i, item) {
            //        if(item['PosterBy'] == _postersid  ) {
            //            _tempData.push(item);
            //        }
            //    });
            //    tempData = _tempData;
            //}
            //if(_categorid!='all'){
            //    if (tempData.length === 0) {
            //        $.each(tempData, function(i, item) {
            //            if( item['Category'] == _categorid ) {
            //                _tempData.push(item);
            //            }
            //        });
            //        tempData = _tempData;
            //    }
            //    else{
            //        var _tempDataCat = [];
            //        $.each(tempData, function(i, item) {
            //            if( item['Category'] == _categorid ) {
            //                _tempDataCat.push(item);
            //            }
            //        });
            //        tempData = _tempDataCat;
            //    }
            //}
            if(_daterange!=0) {
                if (tempData.length != 0) {                   
                    var _tempChartData = [];
                    var newDate = new Date();
                    newDate = new Date(newDate.setDate(newDate.getDate() - _daterange));
                    $.each(tempData, function(i, item) {  
                        var iDate = item.Date.split(' ')[0].split('/');
                        if(newDate <= new Date(iDate[2], iDate[1] - 1, iDate[0])) {
                            _tempChartData.push(item);
                        }
                    }); 
    
                    $.each(_tempChartData, function(i, item) {
                        var found = jobChartObject.some(function (el) {
                            return el.Category === item.Category;
                        });
                        if (!found) {
                            var obj = {
                                Category: item.Category,
                                Count: 1
                            }
                            jobChartObject.push(obj);
                        } else {
                            var index = $.map(jobChartObject, function(obj, index) {
                                if(obj.Category == item.Category) {
                                    return index;
                                }
                            });
                            jobChartObject[index].Count += 1;
                        }
                    });
                    tempData = _tempChartData;
                }
            } else { 
                $.each(tempData, function(i, item) {
                    var found = jobChartObject.some(function (el) {
                        return el.Category === item.Category;
                    });
                    if (!found) {
                        var obj = {
                            Category: item.Category,
                            Count: 1
                        }
                        jobChartObject.push(obj);
                    } else {
                        var index = $.map(jobChartObject, function(obj, index) {
                            if(obj.Category == item.Category) {
                                return index;
                            }
                        });
                        jobChartObject[index].Count += 1;
                    }
                });
            }
            $("#totalJobs").text(tempData.length);
            Array.prototype.sum = function (prop) {
                var total = 0
                for ( var i = 0, _len = this.length; i < _len; i++ ) {
                    total += this[i][prop]
                }
                return total
            }
            //              
            var budget = tempData.sum("AXP");
            ////console.log(_tempData.sum("BudgetASP"))
            $("#totalBudget").text(parseFloat(budget).toLocaleString('en-US'));
            return tempData;
        }
        function LoadGoogleChart() {
            // Load the Visualization API and the corechart package.
            google.charts.load('current', {'packages':['corechart', 'table'], 'callback': drawCharts});

            // Set a callback to run when the Google Visualization API is loaded.
            //google.charts.setOnLoadCallback(drawBarChart);
            //google.charts.setOnLoadCallback(drawPieChart);
            //google.charts.setOnLoadCallback(drawColumnChart);
            //google.charts.setOnLoadCallback(drawTableChart);
        }

        function drawCharts() {
            //drawBarChart();
            drawPieChart();
            drawColumnChart();
            drawTableChart();
        }

        function LoadGoogleFilterChart(_chartData) {
            //drawBarChart();
            drawPieChart();
            drawColumnChart();
            drawTableChart(_chartData);
        }

        function GroupDataByProperty(_chartData, property, range) {
            if(property == 'date') {
                _chartData.sort(function(a,b){
                    var aD = a.Date.split(' ')[0].split('/');
                    var bD = b.Date.split(' ')[0].split('/');
                    var c = new Date(aD[2], aD[1] - 1, aD[0]).getMonth();
                    var d = new Date(bD[2], bD[1] - 1, bD[0]).getMonth();
                    var e = new Date(aD[2], aD[1] - 1, aD[0]).getFullYear();
                    var f = new Date(bD[2], bD[1] - 1, bD[0]).getFullYear();
                    var g = new Date(aD[2], aD[1] - 1, aD[0]).getDate();
                    var h = new Date(bD[2], bD[1] - 1, bD[0]).getDate();
                    if(e == f) {
                        if(c == d) {
                            return g - h;
                        } else {
                            return c - d;
                        }
                    } else {
                        return e - f;
                    }
                });
                _chartData.reverse();

                if(_chartData.length > 0) {
                    var cDate = _chartData[0].Date.split(' ')[0].split('/');
                    newDate = new Date(cDate[2], cDate[1] - 1, cDate[0]);
                    if(range) {
                        newDate = new Date(newDate.setDate(newDate.getDate() - range));
                    }
                }

                $.each(_chartData, function(i, item) {
                    var cDate = item.Date.split(' ')[0].split('/');
                    if(newDate <= new Date(cDate[2], cDate[1] - 1, cDate[0])) {
                        jobChartObjectByProperty.push(item);
                    }
                });

                //jobChartObjectPrime = jobChartObject;
                console.log(jobChartObjectByProperty);
                //GroupFilterData(jobChartObjectByProperty);
            }
        }

        //function GroupFilterData(_chartData) {
        //    jobChartObject = [];
        //    $.each(_chartData, function(i, item) {
        //        var found = jobChartObject.some(function (el) {
        //            return el.Category === item.Category;
        //        });
        //        if (!found) {
        //            var obj = {
        //                Category: item.Category,
        //                Count: 1
        //            }
        //            jobChartObject.push(obj);
        //        } else {
        //            var index = $.map(jobChartObject, function(obj, index) {
        //                if(obj.Category == item.Category) {
        //                    return index;
        //                }
        //            });
        //            jobChartObject[index].Count += 1;
        //        }
        //    });
        //    //jobChartObjectPrime = jobChartObject;
        //    console.log(jobChartObject);
        //}

        function GroupDataByDateWithCount() {
            jobChartObjectByDate = [];
            $.each(jobChartObjectByProperty, function(i, item) {
                //array.push([item.Date, item.Count]);
                var found = jobChartObjectByDate.some(function (el) {
                    return el.Date === item.Date;
                });
                if (!found) {
                    var obj = {
                        Date: item.Date,
                        Count: 1
                    }
                    jobChartObjectByDate.push(obj);
                } else {
                    var index = $.map(jobChartObjectByDate, function(obj, index) {
                        if(obj.Date == item.Date) {
                            return index;
                        }
                    });
                    jobChartObjectByDate[index].Count += 1;
                }
            });
        }

        function PresetForColumnChart(_chartData, range) {
            jobChartObjectByProperty = [];
            if(range && range != 0) {
                GroupDataByProperty(_chartData, 'date', range);
            } else {
                GroupDataByProperty(_chartData, 'date', 30);
            }
            GroupDataByDateWithCount();
        }

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        //function drawBarChart() {
        //    var array = [["Category", "Count"]];
        //    $.each(jobChartObject, function(i, item) {
        //        array.push([item.Category, item.Count]);
        //    });

        //    if(array.length < 2) {
        //        array.push(['', 0]);
        //    }
        //    // Create the data table.
        //    var data = new google.visualization.arrayToDataTable(array);

        //    // Set chart options
        //    var options = {
        //        title: 'Job Posted',
        //        height: 400,
        //        titleTextStyle:
        //        {
        //            italic: false,
        //            color: '#00BBF1',
        //            fontSize: '20'
        //        },
        //        pointSize: 5,
        //        legend:
        //        {
        //            position: 'right',
        //            textStyle:
        //            {
        //                color: '#f5f5f5'
        //            }
        //        },
        //        colors: ['#34A853', 'ff6600', '#FBBC05'],
        //        backgroundColor: '#454545',
        //        hAxis:
        //        {
        //            title: 'Count',
        //            titleTextStyle:
        //            {
        //                italic: false,
        //                color: '#00BBF1',
        //                fontSize: '20'
        //            },
        //            textStyle:
        //            {
        //                color: '#f5f5f5'
        //            },
        //            format: 'ddMMyy'
        //        },
        //        vAxis:
        //        {
        //            baselineColor: '#f5f5f5',
        //            title: 'Date',
        //            titleTextStyle:
        //            {
        //                color: '#00BBF1',
        //                italic: false,
        //                fontSize: '20'
        //            },
        //            textStyle:
        //            {
        //                color: '#f5f5f5'
        //            }
        //        }
        //    };

        //    // Instantiate and draw our chart, passing in some options.
        //    chartBar = new google.visualization.ColumnChart(document.getElementById('bar_chart_div'));
        //    chartBar.draw(data, options);

        //    // when a user clicks on the BarChart, set the selection on the PieChart
        //    google.visualization.events.addListener(chartBar, 'select', function () {
        //        var selection = chartBar.getSelection();
        //        for (var i = 0; i < selection.length; i++) {
        //            // remove column information for selection in PieChart
        //            selection[i].column = null;
        //        }
        //        chartPie.setSelection(selection);

        //        if(selection.length) {
        //            var obj = jobChartObject[selection[0].row];
        //            var tempChart = $.grep(jobChartObjectByPropertyPrime, function(v) {
        //                return v.Category === obj.Category;
        //            });
        //            var _chartObject = $.grep(chartData, function(v) {
        //                return v.Category === obj.Category;
        //            });
        //            PresetForColumnChart(tempChart);
        //            drawColumnChart();
        //            drawTableChart(_chartObject);
        //        }
        //    });
        //}

        function drawPieChart() {
            var array = [["Category", "Percentage"]];
            $.each(jobChartObject, function(i, item) {
                array.push([item.Category, (item.Count / totalJobs) * 100]);
            });

            if(array.length < 2) {
                array.push(['', 0]);
            }
            // Create the data table.
            var data = new google.visualization.arrayToDataTable(array);

            // Set chart options
            var options = {
                title: 'Job Posts by Category',
                //height: 200,
                width: '100%',
                titleTextStyle:
                {
                    italic: false,
                    color: '#242335',
                    fontSize: '14'
                },
                pointSize: 5,
                legend:
                {
                    position: 'right',
                    textStyle:
                    {
                        color: '#666666'
                    }
                },
                colors: ['#f15f79', '#0d0743', '#00acfc','#de5cb8'],
                backgroundColor: '#fff',
                hAxis:
                {
                    title: 'Percentage',
                    titleTextStyle:
                    {
                        italic: false,
                        color: '#666666',
                        fontSize: '20'
                    },
                    textStyle:
                    {
                        color: '#666666'
                    },
                    format: 'ddMMyy'
                },
                vAxis:
                {
                    baselineColor: '#f5f5f5',
                    title: 'Date',
                    titleTextStyle:
                    {
                        color: '#666666',
                        italic: false,
                        fontSize: '20'
                    },
                    textStyle:
                    {
                        color: '#666666'
                    }
                }
            };


            // Instantiate and draw our chart, passing in some options.
            chartPie = new google.visualization.PieChart(document.getElementById('pie_chart_div'));
            chartPie.draw(data, options);

            // set up event handlers
            // when a user clicks on the PieChart, set the selection on the BarChart
            google.visualization.events.addListener(chartPie, 'select', function () {
                var selection = chartPie.getSelection();
                for (var i = 0; i < selection.length; i++) {
                    // add in column information to specify selection in BarChart
                    selection[i].column = 1;
                }
                //chartBar.setSelection(selection);
                if(selection.length) {
                    var obj = jobChartObject[selection[0].row];
                    var tempChart = $.grep(jobChartObjectByPropertyPrime, function(v) {
                        return v.Category === obj.Category;
                    });
                    var _chartObject = $.grep(chartData, function(v) {
                        return v.Category === obj.Category;
                    });
                    PresetForColumnChart(tempChart);
                    drawColumnChart();
                    drawTableChart(_chartObject);
                }
            });
        }

        function drawColumnChart() {
            var array = [["Date", "Count"]];
            $.each(jobChartObjectByDate, function(i, item) {
                array.push([item.Date, item.Count]);
            });

            if(array.length < 2) {
                array.push(['', 0]);
            }
            // Create the data table.
            var data = new google.visualization.arrayToDataTable(array);

            // Set chart options
            var options = {
                title: 'Daily Job Posting',
                //height: 200,
                width: '100%',
                titleTextStyle:
                {
                    italic: false,
                    color: '#242335',
                    fontSize: '14'
                },
                pointSize: 5,
                legend:
                {
                    position: 'right',
                    textStyle:
                    {
                        color: '#666666'
                    }
                },
                colors: ['#00acfc', '#00acfc', '#00acfc'],
                backgroundColor: '#fff',
                vAxis:
                {
                    title: 'Date',
                    titleTextStyle:
                    {
                        italic: false,
                        color: '#666666',
                        fontSize: '20'
                    },
                    textStyle:
                    {
                        color: '#666666'
                    },
                    format: 'ddMMyy'
                },
                hAxis:
                {
                    baselineColor: '#f5f5f5',
                    title: 'Count',
                    titleTextStyle:
                    {
                        color: '#666666',
                        italic: false,
                        fontSize: '20'
                    },
                    textStyle:
                    {
                        color: '#666666'
                    }
                }
            };


            // Instantiate and draw our chart, passing in some options.
            chartColumn = new google.visualization.BarChart(document.getElementById('column_chart_div'));
            chartColumn.draw(data, options);

            // set up event handlers
            // when a user clicks on the PieChart, set the selection on the BarChart
            google.visualization.events.addListener(chartColumn, 'select', function () {
                var selection = chartColumn.getSelection();
                //for (var i = 0; i < selection.length; i++) {
                //    // add in column information to specify selection in BarChart
                //    selection[i].column = 1;
                //}
                //chartBar.setSelection(selection);
                if(selection.length) {
                    var obj = jobChartObjectByDate[selection[0].row];
                    var tempChart = $.grep(jobChartObjectByProperty, function(v) {
                        return v.Date === obj.Date;
                    });
                    var tmpData = FilterByDate(tempChart, obj.Date);
                    jobChartObject = [];
                    GroupData(tmpData);
                    //drawBarChart();
                    drawPieChart();
                    drawTableChart(tempChart);
                }
            });
        }

        function drawTableChart(_chartData) {
            if(!_chartData) {
                _chartData = chartData;
            }
            jobChartForTable = _chartData;
            var array = [["Date", "JobID", "Poster By", "Category", "AXP", "Response"]];
            $.each(_chartData, function(i, item) {
                array.push([item.Date, item.JobID, item.PosterBy, item.Category, item.AXP, item.Response]);
            });

            if(array.length < 2) {
                array.push(['', 0, 0, 0, 0, 0]);
            }

            // Create the data table.
            var data = new google.visualization.arrayToDataTable(array);

            // Set chart options
            var options = {
                title: 'Job Posted',
                //height: 400,
                width: '100%',
                titleTextStyle:
                {
                    italic: false,
                    color: '#242335',
                    fontSize: '18'
                },
                sortColumn: 0,
                sortAscending: true
            };


            // Instantiate and draw our chart, passing in some options.
            chartTable = new google.visualization.Table(document.getElementById('table_chart_div'));
            chartTable.draw(data, options);

            // set up event handlers
            // when a user clicks on the PieChart, set the selection on the BarChart
            google.visualization.events.addListener(chartTable, 'select', function () {
                var selection = chartTable.getSelection();
                //for (var i = 0; i < selection.length; i++) {
                //    // add in column information to specify selection in BarChart
                //    selection[i].column = 1;
                //}
                //chartBar.setSelection(selection);
                if(selection.length) {
                    var obj = jobChartForTable[selection[0].row];
                    jobChartObject = [];
                    var tempChart = $.grep(jobChartForTable, function(v) {
                        return v.Date === obj.Date;
                    });
                    GroupData(tempChart);
                    //drawBarChart();
                    drawPieChart();
                    PresetForColumnChart(tempChart);
                    drawColumnChart();
                }
            });
        }


        var posters = @Html.Raw(Json.Encode(posters));
        var categories = @Html.Raw(Json.Encode(category));
        $('#posters').empty();
        $('#posters').append('<option value="all">All</option>')
        $.each(posters, function(index, value) {
            $('#posters').append('<option value="' + value + '">' + value + '</option>')
        });
        $('#category').empty();
        $('#category').append('<option value="all">All</option>')
        $.each(categories, function(index, value) {
            $('#category').append('<option value="' + value + '">' + value + '</option>')
        });
        $('#posters').change(function() {
           
            if(chartData) {
                //if(this.value != 'all') {
                //var _tmpData = filterByProperty(jobChartObjectByProperty, 'PosterBy', this.value); 
                jobChartObject = [];
                    var _tmpData = CommonfilterByProperty();

                    GroupData(_tmpData);
                    PresetForColumnChart(_tmpData);
                    LoadGoogleFilterChart(jobChartObjectByProperty);
                //} else {
                //    GroupData(jobChartObjectByProperty);
                //    PresetForColumnChart(jobChartObjectByProperty);
                //    jobChartObjectByPropertyPrime = jobChartObjectByProperty;
                //    LoadGoogleFilterChart(chartData);
                //}
            }
        });
        $('#category').change(function() {
         
            if(chartData) {
                //if(this.value != 'all') {
                //var _tmpData = filterByProperty(jobChartObjectByProperty, 'Category', this.value);
                jobChartObject = [];
                    var _tmpData = CommonfilterByProperty();
                    GroupData(_tmpData);
                    PresetForColumnChart(_tmpData);
                    LoadGoogleFilterChart(jobChartObjectByProperty);
                //} else {
                //    GroupData(jobChartObjectByProperty);
                //    PresetForColumnChart(jobChartObjectByProperty);
                //    jobChartObjectByPropertyPrime = jobChartObjectByProperty;
                //    LoadGoogleFilterChart(chartData);
                //}
            }
        });
        $('#date-range').change(function() {
            if(chartData) {
                // if(this.value != 0) {
                jobChartObject = [];
                    var _tmpData = CommonfilterByProperty();
                    //GroupDataByRange(_tmpData, this.value);
                    //GroupData(_tmpData);
                    PresetForColumnChart(_tmpData, this.value);
                    jobChartObjectByPropertyPrime = jobChartObjectByProperty;
                    LoadGoogleFilterChart(jobChartObjectByProperty);
                //} else {
                //    GroupData(chartData);
                //    PresetForColumnChart(chartData);
                //    jobChartObjectByPropertyPrime = jobChartObjectByProperty;
                //    LoadGoogleFilterChart(chartData);
                //}
            }
        });
        $('#reset').click(function() {
            if(chartData) {
                $('#posters  option[value="all"]').prop("selected", true);
                $('#category  option[value="all"]').prop("selected", true);
                $('#date-range  option[value="0"]').prop("selected", true);
                jobChartObject = [];
                GroupData(chartData);
                PresetForColumnChart(chartData);
                jobChartObjectByPropertyPrime = jobChartObjectByProperty;
                LoadGoogleFilterChart(chartData);
            }
        });
        $(window).resize(function(){
            jobChartObject = [];
            GroupData(chartData);
            PresetForColumnChart(chartData);
            jobChartObjectByPropertyPrime = jobChartObjectByProperty;
            LoadGoogleFilterChart(chartData);
        });
    });
</script>

